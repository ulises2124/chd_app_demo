def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.chd_app_demo"
        minSdkVersion 19
        targetSdkVersion 29
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
   androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation project(':openpay-v2.0.2')
   //implementation 'com.android.support:support-v13:26.0.0'
    implementation 'com.google.http-client:google-http-client:1.28.0'
    implementation 'com.google.http-client:google-http-client-android:1.28.0'
    implementation 'com.google.http-client:google-http-client-jackson2:1.28.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.8'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.raygun:raygun4android:4.0.1'
    implementation 'im.crisp:crisp-sdk:0.1.6'
    implementation 'io.card:android-sdk:5.5.0'

    implementation 'com.google.firebase:firebase-analytics:17.2.1'

    // Crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
   // implementation 'com.crashlytics.sdk.android:crashlytics:17.2.2'
  /*  compile('com.crashlytics.sdk.android:crashlytics:2.7.0-SNAPSHOT@aar') {
        transitive = true;
    }*/
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

configurations {
    all {
        exclude module: 'httpclient'
    }
}
repositories {
    maven { url 'https://zendesk.jfrog.io/zendesk/repo' }
}
dependencies {
    implementation group: 'com.zopim.android', name: 'sdk', version: '1.4.8'
}